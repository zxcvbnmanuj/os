SVM - Social Networking


#SVM
import pandas as pd
df = pd.read_csv("C:/Users/HP/Downloads/Social_Network_Ads.csv")
df.head()


df.shape


x = df.iloc[:,2:4]
y = df.iloc[:,4]
x.head()


x.shape


from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC


x_train,x_test,y_train,y_test = train_test_split(x,y,test_size=0.2)


cs = StandardScaler()
x_train = cs.fit_transform(x_train)
x_test = cs.fit_transform(x_test)


#LINEAR


svc = SVC(kernel = 'linear',random_state=0)
svc.fit(x_train,y_train)
y_pred = svc.predict(x_test)
print(classification_report(y_test,y_pred))


import numpy as np
plt.scatter(x_test[:,0],x_test[:,1],c=y_test)
w=svc.coef_[0]
a=w[0]/w[1]
x=np.linspace(-2.5,2.5)
y=a*x-(svc.intercept_[0]/w[1])
plt.plot(x,y)
plt.show()






#RBF -  radial basis function 


svc = SVC(kernel = 'rbf',random_state=0)
svc.fit(x_train,y_train)
y_pred = svc.predict(x_test)
print(classification_report(y_test,y_pred))


plt.scatter(x_test[:,0],x_test[:,1],c=y_test)
w=svc.dual_coef_[0]
a=w[0]/w[1]
x=np.linspace(-2.5,2.5)
y=a*x-(svc.intercept_[0]/w[1])
plt.plot(x,y)
plt.show()


#POLY


svc = SVC(kernel = 'poly')
svc.fit(x_train,y_train)
y_pred = svc.predict(x_test)
print(classification_report(y_test,y_pred))


plt.scatter(x_test[:,0],x_test[:,1],c=y_test)
w=svc.dual_coef_[0]
a=w[0]/w[1]
x=np.linspace(-2.5,2.5)
y=a*x-(svc.intercept_[0]/w[1])
plt.plot(x,y)
plt.show()


________________