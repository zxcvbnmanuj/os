# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load the dataset from the specified CSV file into a Pandas DataFrame
df = pd.read_csv('C:/Users/HP/Downloads/placement.csv')

# Display the first few rows of the DataFrame
df.head()
.
# Scatter plot of 'cgpa' against 'package'
plt.scatter(df['cgpa'], df['package'])
plt.xlabel('cgpa')
plt.ylabel('package')

# Selecting features (X) and target variable (y)
x = df[['cgpa']]  # Using double square brackets to keep x as a DataFrame
y = df['package']

# Split the data into training and testing sets (80% training, 20% testing)
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

# Create a Linear Regression model
lr = LinearRegression()  # Object creation

# Fit the model to the training data
lr.fit(x_train, y_train)  # Training the model

# Scatter plot of 'cgpa' against 'package'
plt.scatter(df['cgpa'], df['package'])

# Plot the regression line using the trained model
plt.plot(x_train, lr.predict(x_train), color='red')

# Label the axes of the plot
plt.xlabel('cgpa')
plt.ylabel('package')

# Get the coefficients and intercept of the linear regression model
m = lr.coef_  # Slope or coefficient
b = lr.intercept_  # Intercept

# Predicting the value of 'package' (y) for a given 'cgpa' (x = 9.5)
predicted_value = m * 9.5 + b

# Display the predicted value
print(predicted_value)

# Show the plot
plt.show()
